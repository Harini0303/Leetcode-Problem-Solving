//problem : https://leetcode.com/problems/spiral-matrix/description/

Given an m x n matrix, return all elements of the matrix in spiral order.

 

Example 1:


Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [1,2,3,6,9,8,7,4,5]
Example 2:


Input: matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]
Output: [1,2,3,4,8,12,11,10,9,5,6,7]

class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        int n = matrix.length;
        int m = matrix[0].length;

        List<Integer> spiral = new ArrayList<Integer>();

        int top =0,left =0,right=m-1,bottom=n-1;

        while(top<=bottom && left<=right){
            for(int i=left;i<=right;i++){
                spiral.add(matrix[top][i]);
            }
            top++;
            
            for(int i=top;i<=bottom;i++){
                spiral.add(matrix[i][right]);

            }
            right--;
           if(top<=bottom){
            for(int i=right;i>=left;i--){
                spiral.add(matrix[bottom][i]);
            }
           }
            bottom--;

            if(left<=right){

            

            for(int i = bottom;i>=top;i--){
                spiral.add(matrix[i][left]);
            }
            }
            left++;
        }

        return spiral;
        
    }
}


import java.util.*;
public class Solution {
    public static int[] spiralMatrix(int [][]matrix) {
        // Write your code here.
        int n = matrix.length;
        int m = matrix[0].length;
        int[] arr = new int[n*m];
        
        int top=0,left=0,right=m-1,bottom = n-1;

        int index = 0;

        while (top <= bottom && left <= right) {

            for (int i = left; i <= right; i++) {
                arr[index++] = matrix[top][i];
            }
            top++;

            for (int i = top; i <= bottom; i++) {
                arr[index++] = matrix[i][right];
            }
            right--;

            if (top <= bottom) {
                for (int i = right; i >= left; i--) {
                    arr[index++] = matrix[bottom][i];
                }
                bottom--;
            }

            if (left <= right) {
                for (int i = bottom; i >= top; i--) {
                    arr[index++] = matrix[i][left];
                }
                left++;
            }
        }

        return arr;
    }
}