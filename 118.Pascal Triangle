// https://leetcode.com/problems/pascals-triangle/description/


Given an integer numRows, return the first numRows of Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:


 

Example 1:

Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]
Example 2:

Input: numRows = 1
Output: [[1]]

class Solution {
    public List<List<Integer>> generate(int numRows) {
         List<List<Integer>> result = new ArrayList<>();
        

        for(int i=1;i<=numRows;i++){
            List<Integer> temp = new ArrayList<>();
            for(int j=1;j<=i;j++){
                temp.add(pascal(i-1,j-1));
            }
            result.add(temp);

        }
        return result;
        
    }

    public static int pascal(int r,int c){
        int ans = 1;
        for(int i=0;i<c;i++){
            ans = ans * (r-i);
            ans = ans / (i+1);
        }
        return ans;

    }
}