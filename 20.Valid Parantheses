//problem : https://leetcode.com/problems/valid-parentheses/description/

Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.
 

Example 1:

Input: s = "()"
Output: true
Example 2:

Input: s = "()[]{}"
Output: true
Example 3:

Input: s = "(]"
Output: false

import java.util.*;

class Solution {
    public boolean isValid(String s) {
        char[] c = s.toCharArray();
        Stack<Character> st = new Stack<Character>();

        for(int i = 0; i < c.length; i++) {
            if(c[i] == '(' || c[i] == '{' || c[i] == '[') {
                st.push(c[i]);
            } else {
                if(st.isEmpty()) {
                    return false;
                } else {
                    char top = st.pop();
                    if((top == '(' && c[i] != ')') || (top == '{' && c[i] != '}') || (top == '[' && c[i] != ']')) {
                        return false;
                    }
                }
            }
        }
        return st.isEmpty();
    }
}
